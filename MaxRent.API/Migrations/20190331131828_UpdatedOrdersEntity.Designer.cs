// <auto-generated />
using System;
using MaxRent.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MaxRent.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190331131828_UpdatedOrdersEntity")]
    partial class UpdatedOrdersEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MaxRent.API.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetCode");

                    b.Property<DateTime>("DatePurchased");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("MaxRent.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerNumber");

                    b.Property<string>("OrderCode");

                    b.Property<int>("OrderState")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MaxRent.API.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<int>("OrderId");

                    b.Property<double>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MaxRent.API.Models.OrderItemAsset", b =>
                {
                    b.Property<int>("AssetId");

                    b.Property<int>("OrderItemId");

                    b.HasKey("AssetId", "OrderItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemAsset");
                });

            modelBuilder.Entity("MaxRent.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("GroupCode");

                    b.Property<double>("InitialPrice");

                    b.Property<string>("Name");

                    b.Property<double>("PriceForDay");

                    b.Property<double>("PriceForWeek");

                    b.Property<double>("PriceForWeekend");

                    b.Property<string>("ProductCode");

                    b.Property<string>("YoutubeUrl");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MaxRent.API.Models.ProductPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMain");

                    b.Property<int>("ProductId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("MaxRent.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<DateTime>("LastActive");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaxRent.API.Models.Asset", b =>
                {
                    b.HasOne("MaxRent.API.Models.Product", "AssignedProduct")
                        .WithMany("Assets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MaxRent.API.Models.Order", b =>
                {
                    b.HasOne("MaxRent.API.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MaxRent.API.Models.OrderItem", b =>
                {
                    b.HasOne("MaxRent.API.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MaxRent.API.Models.OrderItemAsset", b =>
                {
                    b.HasOne("MaxRent.API.Models.Asset", "Asset")
                        .WithMany("OrderItemAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MaxRent.API.Models.OrderItem", "OrderItem")
                        .WithMany("OrderItemAssets")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MaxRent.API.Models.ProductPhoto", b =>
                {
                    b.HasOne("MaxRent.API.Models.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
